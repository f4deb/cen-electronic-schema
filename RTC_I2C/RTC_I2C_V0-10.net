(export (version D)
  (design
    (source /media/f4deb/travail2/electronique/git-f4deb/cen-electronic-schema/RTC_I2C/RTC_I2C.sch)
    (date "ven. 18 juil. 2014 20:01:59 CEST")
    (tool "eeschema (2013-07-07 BZR 4022)-stable"))
  (components
    (comp (ref U1)
      (value PCF8563)
      (libsource (lib CEN-SCHEMA) (part PCF8563))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C956EB))
    (comp (ref X1)
      (value CRYSTAL)
      (libsource (lib CEN-SCHEMA) (part CRYSTAL))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C956FA))
    (comp (ref C2)
      (value 10p)
      (libsource (lib CEN-SCHEMA) (part CTRIM))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95722))
    (comp (ref P1)
      (value CONN_4)
      (libsource (lib CEN-SCHEMA) (part CONN_4))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C957B2))
    (comp (ref D1)
      (value DIODESCH)
      (libsource (lib CEN-SCHEMA) (part DIODESCH))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C9582F))
    (comp (ref C1)
      (value 10F/2.7V)
      (libsource (lib CEN-SCHEMA) (part CP))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95865))
    (comp (ref C3)
      (value 10F/2.7V)
      (libsource (lib CEN-SCHEMA) (part CP))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C9587E))
    (comp (ref R1)
      (value 150)
      (libsource (lib CEN-SCHEMA) (part R))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95981))
    (comp (ref K1)
      (value CONN_1)
      (libsource (lib CEN-SCHEMA) (part CONN_1))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95A80))
    (comp (ref R2)
      (value 1K)
      (libsource (lib CEN-SCHEMA) (part R))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95A8F))
    (comp (ref C4)
      (value 100n)
      (libsource (lib CEN-SCHEMA) (part C))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95A9E))
    (comp (ref D2)
      (value VERT)
      (libsource (lib CEN-SCHEMA) (part LED))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95AB7))
    (comp (ref K3)
      (value COLONETTE)
      (libsource (lib CEN-SCHEMA) (part COLONETTE))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95E82))
    (comp (ref K5)
      (value COLONETTE)
      (libsource (lib CEN-SCHEMA) (part COLONETTE))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95E91))
    (comp (ref K2)
      (value COLONETTE)
      (libsource (lib CEN-SCHEMA) (part COLONETTE))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95EA0))
    (comp (ref K4)
      (value COLONETTE)
      (libsource (lib CEN-SCHEMA) (part COLONETTE))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95EAF))
    (comp (ref K6)
      (value CONN_1)
      (libsource (lib CEN-SCHEMA) (part CONN_1))
      (sheetpath (names /) (tstamps /))
      (tstamp 53C95FD2)))
  (libparts
    (libpart (lib CEN-SCHEMA) (part C)
      (fields
        (field (name Reference) C)
        (field (name Value) C)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name ~) (type passive))
        (pin (num 2) (name ~) (type passive))))
    (libpart (lib CEN-SCHEMA) (part COLONETTE)
      (fields
        (field (name Reference) K)
        (field (name Value) COLONETTE)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name 1) (type input))))
    (libpart (lib CEN-SCHEMA) (part CONN_1)
      (fields
        (field (name Reference) K)
        (field (name Value) CONN_1)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name P1) (type passive))))
    (libpart (lib CEN-SCHEMA) (part CONN_4)
      (fields
        (field (name Reference) P)
        (field (name Value) CONN_4)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name P1) (type passive))
        (pin (num 2) (name P2) (type passive))
        (pin (num 3) (name P3) (type passive))
        (pin (num 4) (name P4) (type passive))))
    (libpart (lib CEN-SCHEMA) (part CP)
      (fields
        (field (name Reference) C)
        (field (name Value) CP)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name ~) (type passive))
        (pin (num 2) (name ~) (type passive))))
    (libpart (lib CEN-SCHEMA) (part CRYSTAL)
      (fields
        (field (name Reference) X)
        (field (name Value) CRYSTAL)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name 1) (type passive))
        (pin (num 2) (name 2) (type passive))))
    (libpart (lib CEN-SCHEMA) (part CTRIM)
      (fields
        (field (name Reference) C)
        (field (name Value) CTRIM)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name ~) (type passive))
        (pin (num 2) (name ~) (type passive))))
    (libpart (lib CEN-SCHEMA) (part DIODESCH)
      (footprints
        (fp D?)
        (fp S*))
      (fields
        (field (name Reference) D)
        (field (name Value) DIODESCH)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name A) (type passive))
        (pin (num 2) (name K) (type passive))))
    (libpart (lib CEN-SCHEMA) (part LED)
      (fields
        (field (name Reference) D)
        (field (name Value) LED)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name A) (type passive))
        (pin (num 2) (name K) (type passive))))
    (libpart (lib CEN-SCHEMA) (part PCF8563)
      (fields
        (field (name Reference) U)
        (field (name Value) PCF8563)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name OSCI) (type input))
        (pin (num 2) (name OSCO) (type output))
        (pin (num 3) (name /INT) (type output))
        (pin (num 4) (name VSS) (type passive))
        (pin (num 5) (name SDA) (type BiDi))
        (pin (num 6) (name SCL) (type output))
        (pin (num 7) (name CLKO) (type output))
        (pin (num 8) (name VDD) (type passive))))
    (libpart (lib CEN-SCHEMA) (part R)
      (fields
        (field (name Reference) R)
        (field (name Value) R)
        (field (name Footprint) ~)
        (field (name Datasheet) ~))
      (pins
        (pin (num 1) (name ~) (type passive))
        (pin (num 2) (name ~) (type passive)))))
  (libraries
    (library (logical CEN-SCHEMA)
      (uri ../../git-f4deb-cen-electronic-library/CEN-SCHEMA.lib)))
  (nets
    (net (code 1) (name "")
      (node (ref R2) (pin 1))
      (node (ref D2) (pin 2)))
    (net (code 2) (name +5VD)
      (node (ref D1) (pin 1))
      (node (ref C4) (pin 1))
      (node (ref P1) (pin 2))
      (node (ref D2) (pin 1)))
    (net (code 3) (name "")
      (node (ref R1) (pin 1))
      (node (ref C3) (pin 2)))
    (net (code 4) (name "")
      (node (ref C3) (pin 1))
      (node (ref C1) (pin 2)))
    (net (code 5) (name "")
      (node (ref D1) (pin 2))
      (node (ref U1) (pin 8))
      (node (ref R1) (pin 2)))
    (net (code 6) (name "")
      (node (ref K4) (pin 1)))
    (net (code 7) (name "")
      (node (ref K2) (pin 1)))
    (net (code 8) (name "")
      (node (ref K5) (pin 1)))
    (net (code 9) (name "")
      (node (ref K3) (pin 1)))
    (net (code 10) (name "")
      (node (ref X1) (pin 1))
      (node (ref U1) (pin 2)))
    (net (code 11) (name "")
      (node (ref C2) (pin 2))
      (node (ref X1) (pin 2))
      (node (ref U1) (pin 1)))
    (net (code 12) (name GND)
      (node (ref U1) (pin 4))
      (node (ref C2) (pin 1))
      (node (ref P1) (pin 1))
      (node (ref C1) (pin 1))
      (node (ref R2) (pin 2))
      (node (ref C4) (pin 2)))
    (net (code 13) (name /CLKO)
      (node (ref K1) (pin 1))
      (node (ref U1) (pin 7)))
    (net (code 14) (name /INT)
      (node (ref K6) (pin 1))
      (node (ref U1) (pin 3)))
    (net (code 15) (name /SDA)
      (node (ref P1) (pin 4))
      (node (ref U1) (pin 5)))
    (net (code 16) (name /SCL)
      (node (ref U1) (pin 6))
      (node (ref P1) (pin 3)))))